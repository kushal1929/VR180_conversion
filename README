🎬 VR180 Conversion

Convert your 2D videos into immersive VR180 experiences in just a few clicks!

🌐 Live Demo

Check it out here: https://vr180-conversion.onrender.com/

✨ Features

🎥 2D → VR180 Conversion: Automatically process 2D clips into stereoscopic VR180 videos.

🚀 Fast Processing: Real-time progress tracking while your video converts.

🖼 Preview Before Download: Preview the VR output before saving.

🎨 User-Friendly UI: Clean and modern interface built for non-technical users.

🛠 Tech Stack
Layer	Technology
Frontend	React 18, TailwindCSS, Radix UI, Framer Motion
Backend	Node.js, Express, FFmpeg, WebSockets
Database	PostgreSQL (Neon Serverless) via Drizzle ORM
Auth	Passport.js
Video Processing	Depth estimation + stereoscopic rendering algorithms
Bundler & Build	Vite, esbuild, tsx
⚡ Quick Start (Development)
# Clone the repo
git clone https://github.com/kushal1929/VR180_conversion.git
cd VR180_conversion

# Install dependencies
npm install

# Start the dev server (Windows friendly)
npx cross-env NODE_ENV=development tsx server/index.ts

# OR (if cross-env installed globally)
npm run dev


The app will run at: http://localhost:5000 (or process.env.PORT)

🚀 Deployment (Render)

Go to Render
 → New Web Service → Connect GitHub repo

Root Directory: leave blank (repo root contains package.json)

Build Command:

npm install && npm run build


Start Command:

npm start


Port: Make sure server/index.ts listens to process.env.PORT

🎯 How It Works

Upload a 2D clip.

The server processes it using depth estimation + stereoscopic rendering.

Preview your VR180 clip in the browser.

Download the final VR180 video and enjoy immersive playback!

📦 Folder Structure (Root)
VR180_conversion/
│
├─ server/             # Backend code (Express + FFmpeg)
├─ uploads/            # Video uploads (empty in repo, use .gitkeep)
├─ package.json        # Project config & scripts
├─ tsconfig.json       # TypeScript config
└─ src/                # Frontend React + Tailwind code


💡 Tip: Keep uploads/ empty in GitHub, add .gitkeep to track the folder.

📝 Scripts
Command	Description
npm run dev	Run development server
npm run build	Build frontend + backend
npm start	Start production server
🤝 Contributing

Contributions are welcome!

Fork the repo

Create a new branch

Make changes & push

Submit a Pull Request

📄 License

MIT License © 2025 Kushal
